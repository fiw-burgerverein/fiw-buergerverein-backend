## PostgreSQL
spring.datasource.url=jdbc:postgresql://db.f4.htw-berlin.de:5432/_s0564116__burgerverein
spring.datasource.username=_s0564116__burgerverein_generic
spring.datasource.password=Haya@2715
spring.jpa.generate-ddl=true

## In memory Datenbank (Schnell zum Testen), diese Datenbank wird später mit unserer richtigen Datenbank ausgetauscht
 ##H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
 ##Please add this URL inside: http://localhost:8080/h2 --> JDBC URL=jdbc:h2:file:~/test

#spring.datasource.url=jdbc:h2:file:~/test
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver

## Löscht die DB-Tabellen, die beim Starten der Applikation da sind, und richtet die neu auf
#spring.jpa.hibernate.ddl-auto=create-drop

###### JPA Properties ######
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#pring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = true
##### Hibernate ddl auto (create, create-drop, validate, update) --> bereits (ohne hibernate) oben bei DB angegeben?
spring.jpa.hibernate.ddl-auto = update

##mail server for testing purposes (access data for mailtrap: Github account Milena)
spring.mail.host=smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=4e208868cb1b89
spring.mail.password=700123322baa0b
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

server.port = 8080
logging.level.org.springframework = WARN
logging.level.org.hibernate = WARN
logging.level.com.buergervereinHSH.BackendProject = DEBUG